apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/component: opentelemetry-collector
spec:
  mode: deployment
  serviceAccount: otel-collector
  image: otel/opentelemetry-collector-contrib:0.80.0
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      loki:
        protocols:
          http:
            endpoint: 0.0.0.0:3100
      k8s_events:
        auth_type: serviceAccount
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                  action: keep
                  regex: otel-collector
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
                  action: keep
                  regex: opentelemetry-collector
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_pod_container_port_name]
                  action: keep
                  regex: metrics
              scrape_interval: 10s
              metrics_path: /metrics
              scheme: http
              honor_labels: true
            - job_name: 'spring-apps'
              metrics_path: '/actuator/prometheus'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                  action: keep
                  regex: portfogram-server
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
    processors:
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
      metricstransform:
        transforms:
          - include: .*
            match_type: regexp
            action: update
            new_name: '$1'
            operations:
              - action: update_label
                label: otel_scope_name
                new_label: job
              - action: aggregate_labels
                label_set: [job]
              - action: aggregate_labels
                label_set: [""]
      resource:
        attributes:
          - action: insert
            key: loki.format
            value: raw
          - action: insert
            key: service.name
            from_attribute: k8s.deployment.name
          - action: insert
            key: service.name
            from_attribute: k8s.daemonset.name
          - action: insert
            key: service.name
            from_attribute: k8s.statefulset.name
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      batch:
        send_batch_size: 10000
        timeout: 10s
    exporters:
      logging:
        loglevel: debug
      otlp/tempo:
        endpoint: tempo.observability.svc.cluster.local:4317
        tls:
          insecure: true
    // TODO : multi exporters : Loki / Prometheus / 이후 하나 더 추가 
      loki:
        endpoint: "http://loki.observability.svc.cluster.local:3100/loki/api/v1/push"
      prometheusremotewrite:
        endpoint: "http://prometheus.observability.svc.cluster.local:9090/api/v1/write"
        tls:
          insecure: true
    service:
      telemetry:
        logs:
          level: info
        metrics:
          level: detailed
          address: 0.0.0.0:8888
      pipelines:
        traces:
          receivers: [otlp]
          processors: [k8sattributes, memory_limiter, batch]
          exporters: [otlp/tempo, logging]
        logs:
          receivers: [otlp, loki]
          processors: [k8sattributes, resource, memory_limiter, batch]
          exporters: [loki, logging]
        metrics:
          receivers: [otlp, prometheus]
          processors: [k8sattributes, memory_limiter, metricstransform, batch]
          exporters: [prometheusremotewrite, logging]
  ports:
    - name: metrics
      port: 8888
    - name: otlp-grpc
      port: 4317
    - name: otlp-http
      port: 4318